# This YAML defines a Tenant resource for the Capsule multi-tenancy operator in Kubernetes
# The Tenant resource is used to logically partition a Kubernetes cluster and set policies

apiVersion: capsule.clastix.io/v1beta2
kind: Tenant
metadata:
  name: default-cluster  # Unique identifier for this Tenant

spec:
  # Owners section defines who has administrative access to this Tenant
  owners:
    - kind: ServiceAccount
      name: system:serviceaccount:tenant-system:default-workspace
      # ProxyOperations allow the ServiceAccount to perform specific operations cluster-wide
      proxyOperations:
        - kind: IngressClasses
          operations: [List]
        - kind: Nodes
          operations: [List]
        - kind: StorageClasses
          operations: [List]
        - kind: PriorityClasses
          operations: [List]
        - kind: PersistentVolumes
          operations: [List]
      # ClusterRoles assigned to the ServiceAccount within this Tenant
      clusterRoles:
        - admin
        - capsule-namespace-deleter

  # NamespaceOptions define settings for namespaces within this Tenant
  namespaceOptions:
    quota: {}  # No specific quota set for namespaces
    additionalMetadata:
      labels:
        capsule.clastix.io/tenant: default-cluster
        # Pod Security Standards labels
        pod-security.kubernetes.io/enforce: baseline
        pod-security.kubernetes.io/audit: restricted
        pod-security.kubernetes.io/warn: restricted

  # ServiceOptions define settings for Services within this Tenant
  serviceOptions:
    additionalMetadata:
      labels:
        capsule.clastix.io/tenant: default-cluster
    allowedServices:
      nodePort: true
      externalName: true
      loadBalancer: false  # Prevents creation of LoadBalancer services

  # PodOptions define settings for Pods within this Tenant
  podOptions:
    additionalMetadata:
      labels:
        capsule.clastix.io/tenant: default-cluster

  # IngressOptions define settings for Ingresses within this Tenant
  ingressOptions:
    hostnameCollisionScope: Tenant  # Prevents hostname collisions within the Tenant

  # NodeSelector restricts which nodes Pods in this Tenant can be scheduled on
  nodeSelector:
    doks.digitalocean.com/node-pool: default-pool

  # NetworkPolicies define network isolation rules for the Tenant
  networkPolicies:
    items:
      - ingress:
          - from:
              - namespaceSelector:
                  matchLabels:
                    capsule.clastix.io/tenant: default-cluster
              - namespaceSelector:
                  matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values: [ingress-nginx]
              - namespaceSelector:
                  matchExpressions:
                    - key: kubernetes.io/metadata.name
                      operator: In
                      values: [kube-system]
              - podSelector:
                  matchLabels:
                    managed-by: operator
        egress: [{}]  # Allow all egress traffic
        policyTypes: [Ingress, Egress]

  # ResourceQuota sets resource limits for the entire Tenant
  resourceQuota:
    scope: Tenant
    items:
      - hard:
          limits.cpu: "4000m"       # Max CPU limit: 4 cores
          limits.memory: "8Gi"      # Max memory limit: 8 GB
          requests.cpu: "2000m"     # Max CPU request: 2 cores
          requests.memory: "4Gi"    # Max memory request: 4 GB
          requests.storage: "100Gi" # Max storage request: 100 GB
          pods: "20"                # Max number of pods: 20

  # ImagePullPolicies restrict which pull policies can be used for containers
  imagePullPolicies:
    - Always
    - Never
    - IfNotPresent

  cordoned: false        # If true, prevents creation of new namespaces in the Tenant
  preventDeletion: false # If true, prevents deletion of the Tenant

# Note: This configuration should be tailored to your specific needs and environment.
# Consult the Capsule documentation for all available options and their meanings.